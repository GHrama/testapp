package simulation_questionaire;

import java.lang.reflect.Field;
import java.util.ArrayList;

public class Options {
	// set fixed privacy options before hand
	public static double give_full_data = 1;   //option 1
	public static double low_privacy_data = 0.75;
	public static double medium_privacy_data = 0.5; 
	public static double high_privacy_data = 0.25; //option 2
	public static double give_no_data = 0;     // option 3
	
	
	
	/**
	 * @param o
	 * @return
	 * check if option is valid
	 */
	public static boolean checkOption(int o){
		if(o < 1 || o > 5 )
			return false;
		else 
			return true;
		
	}
	
	/**
	 * get the amount of privacy for each option
	 * @return
	 */
	public static double getPrivacyOptions(int pri){
		switch(pri){
		case 1: return give_full_data;
		case 2: return low_privacy_data;
		case 3: return medium_privacy_data;
		case 4: return high_privacy_data;
		case 5:	return give_no_data;
		
		}
		return -1;
	}
	
	/**
	 * Get names of the options.
	 * returns names of the assigned fields
	 */
	public static void displayOptions(){
		ArrayList<Field> o = CommonFunctions.loopClassFieldsOriginalSize(Options.class);
		for(int i = 0; i < o.size();i++){
			System.out.println(" "+(i+1)+". "+o.get(i).getName());
		}
		
		
	}
	
	/**
	 * option is the option threshold
	 * flag indicates whether we suggest option above opitons or below option
	 * flag = 1 improve privacy
	 * flag = 2 improve credit
	 * last -> cannot improve credit or privacy further
	 * 
	 * @param option
	 * @param flag
	 * @param last
	 */
	public static void displayAugmentedOptionsAbove(double option, int flag, boolean last, int ii, int jj, int kk, int last_round){
		ArrayList<Field> o = CommonFunctions.loopClassFieldsOriginalSize(Options.class);
		System.out.println(" Previous Answer = "+ StoreResults.answers[ii][jj][kk][last_round]);
		double money = StoreResults.cost_matrix[ii][jj][kk];
		if(flag == 1){ // options above and equal
			for(int i = 0; i < o.size();i++){
				if(i+1 >= option){
					if(last == true){
						System.out.println(" "+(i+1)+". "+o.get(i).getName()+"   Credit ::"+ money*getPrivacyOptions(i+1)+"  This option can maintain your privacy");
					}
					else
					{
						System.out.println(" "+(i+1)+". "+o.get(i).getName()+"   Credit ::"+ money*getPrivacyOptions(i+1)+"  This option can improve your privacy");
					}
					
				}
				else
					System.out.println(" "+(i+1)+". "+o.get(i).getName());
			}
		}
		else if(flag == 2){ // options equal and below
			for(int i = 0; i < o.size();i++){
				if(i+1 <= option){
					if(last == true){ // means lower privacy already acheived
						System.out.println(" "+(i+1)+". "+o.get(i).getName()+"   Credit ::"+ money*getPrivacyOptions(i+1)+"  This option can maintain your credit gain");
					}
					else
					{
						System.out.println(" "+(i+1)+". "+o.get(i).getName()+"   Credit ::"+ money*getPrivacyOptions(i+1)+"  This option can improve your credit gain");
					}
					
				}
				else
					System.out.println(" "+(i+1)+". "+o.get(i).getName()+"  Credit ::"+ money*getPrivacyOptions(i+1));
			}
		}
	}
	
	
	
	
}
